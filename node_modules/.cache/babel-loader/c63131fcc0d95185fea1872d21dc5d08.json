{"remainingRequest":"C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\src\\shared\\data.service.js","dependencies":[{"path":"C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\src\\shared\\data.service.js","mtime":1602008042743},{"path":"C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1602007925650},{"path":"C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\node_modules\\babel-loader\\lib\\index.js","mtime":1602007922436},{"path":"C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\node_modules\\eslint-loader\\index.js","mtime":1602007962007}],"contextDependencies":[],"result":["import _typeof from \"C:\\\\Users\\\\christian.jones\\\\Documents\\\\GitHub\\\\Spectacle\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\christian.jones\\\\Documents\\\\GitHub\\\\Spectacle\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport * as axios from 'axios';\nimport { API } from \"./config\";\n\nvar getMovie = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(searchTitle) {\n    var searches, searchSuccess, JSONReadySearches, response, result, JSONReadySearcheSuccess;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            searches = new Array();\n            searchSuccess = new Array();\n\n            if (localStorage['searches']) {\n              searches = JSON.parse(localStorage.getItem('searches'));\n              searchSuccess = JSON.parse(localStorage.getItem('searchSuccess'));\n            }\n\n            searches.push(searchTitle);\n            JSONReadySearches = JSON.stringify(searches);\n            localStorage.setItem('searches', JSONReadySearches);\n            console.log(localStorage.getItem('searches'));\n            _context.next = 10;\n            return axios.get(API + searchTitle);\n\n          case 10:\n            response = _context.sent;\n            result = parseList(response);\n            console.log(result);\n\n            if (result.Response == 'False') {\n              searchSuccess.push('not found');\n            } else {\n              searchSuccess.push('found');\n            }\n\n            JSONReadySearcheSuccess = JSON.stringify(searchSuccess);\n            localStorage.setItem('searchSuccess', JSONReadySearcheSuccess);\n            console.log(localStorage.getItem('searchSuccess'));\n            return _context.abrupt(\"return\", result);\n\n          case 20:\n            _context.prev = 20;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", {});\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 20]]);\n  }));\n\n  return function getMovie(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar parseList = function parseList(response) {\n  if (response.status !== 200) throw Error(response.message);\n  if (!response.data) return [];\n  var list = response.data;\n\n  if (_typeof(list) !== 'object') {\n    list = [];\n  }\n\n  return list;\n};\n\nexport var parseItem = function parseItem(response, code) {\n  if (response.status !== code) throw Error(response.message);\n  var item = response.data;\n\n  if (_typeof(item) !== 'object') {\n    item = undefined;\n  }\n\n  return item;\n};\nexport var dataService = {\n  getMovie: getMovie\n};",{"version":3,"sources":["C:/Users/christian.jones/Documents/GitHub/Spectacle/src/shared/data.service.js"],"names":["axios","API","getMovie","searchTitle","searches","Array","searchSuccess","localStorage","JSON","parse","getItem","push","JSONReadySearches","stringify","setItem","console","log","get","response","result","parseList","Response","JSONReadySearcheSuccess","error","status","Error","message","data","list","parseItem","code","item","undefined","dataService"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,GAAT;;AAEA,IAAMC,QAAQ;AAAA,qEAAG,iBAAgBC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAETC,YAAAA,QAFS,GAEE,IAAIC,KAAJ,EAFF;AAGTC,YAAAA,aAHS,GAGO,IAAID,KAAJ,EAHP;;AAIb,gBAAIE,YAAY,CAAC,UAAD,CAAhB,EAA8B;AAC5BH,cAAAA,QAAQ,GAAGI,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,UAArB,CAAX,CAAX;AACAJ,cAAAA,aAAa,GAAGE,IAAI,CAACC,KAAL,CAAWF,YAAY,CAACG,OAAb,CAAqB,eAArB,CAAX,CAAhB;AACD;;AACDN,YAAAA,QAAQ,CAACO,IAAT,CAAcR,WAAd;AACIS,YAAAA,iBATS,GASWJ,IAAI,CAACK,SAAL,CAAeT,QAAf,CATX;AAUbG,YAAAA,YAAY,CAACO,OAAb,CAAqB,UAArB,EAAiCF,iBAAjC;AACAG,YAAAA,OAAO,CAACC,GAAR,CAAYT,YAAY,CAACG,OAAb,CAAqB,UAArB,CAAZ;AAXa;AAAA,mBAYUV,KAAK,CAACiB,GAAN,CAAUhB,GAAG,GAAGE,WAAhB,CAZV;;AAAA;AAYPe,YAAAA,QAZO;AAaTC,YAAAA,MAbS,GAaAC,SAAS,CAACF,QAAD,CAbT;AAcbH,YAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;;AACA,gBAAIA,MAAM,CAACE,QAAP,IAAmB,OAAvB,EAAgC;AAC9Bf,cAAAA,aAAa,CAACK,IAAd,CAAmB,WAAnB;AACD,aAFD,MAGK;AACHL,cAAAA,aAAa,CAACK,IAAd,CAAmB,OAAnB;AACD;;AACGW,YAAAA,uBArBS,GAqBiBd,IAAI,CAACK,SAAL,CAAeP,aAAf,CArBjB;AAsBbC,YAAAA,YAAY,CAACO,OAAb,CAAqB,eAArB,EAAsCQ,uBAAtC;AACAP,YAAAA,OAAO,CAACC,GAAR,CAAYT,YAAY,CAACG,OAAb,CAAqB,eAArB,CAAZ;AAvBa,6CAwBNS,MAxBM;;AAAA;AAAA;AAAA;AA0BbJ,YAAAA,OAAO,CAACQ,KAAR;AA1Ba,6CA2BN,EA3BM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARrB,QAAQ;AAAA;AAAA;AAAA,GAAd;;AA+BA,IAAMkB,SAAS,GAAG,SAAZA,SAAY,CAAAF,QAAQ,EAAI;AAC5B,MAAIA,QAAQ,CAACM,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACP,QAAQ,CAACQ,OAAV,CAAX;AAC7B,MAAI,CAACR,QAAQ,CAACS,IAAd,EAAoB,OAAO,EAAP;AACpB,MAAIC,IAAI,GAAGV,QAAQ,CAACS,IAApB;;AACA,MAAI,QAAOC,IAAP,MAAgB,QAApB,EAA8B;AAC5BA,IAAAA,IAAI,GAAG,EAAP;AACD;;AACD,SAAOA,IAAP;AACD,CARD;;AAUA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACX,QAAD,EAAWY,IAAX,EAAoB;AAC3C,MAAIZ,QAAQ,CAACM,MAAT,KAAoBM,IAAxB,EAA8B,MAAML,KAAK,CAACP,QAAQ,CAACQ,OAAV,CAAX;AAC9B,MAAIK,IAAI,GAAGb,QAAQ,CAACS,IAApB;;AACA,MAAI,QAAOI,IAAP,MAAgB,QAApB,EAA8B;AAC5BA,IAAAA,IAAI,GAAGC,SAAP;AACD;;AACD,SAAOD,IAAP;AACD,CAPM;AASP,OAAO,IAAME,WAAW,GAAG;AACzB/B,EAAAA,QAAQ,EAARA;AADyB,CAApB","sourcesContent":["import * as axios from 'axios';\r\n\r\nimport { API } from './config';\r\n\r\nconst getMovie = async function (searchTitle) {\r\n  try {\r\n    var searches = new Array();\r\n    var searchSuccess = new Array();\r\n    if (localStorage['searches']) {\r\n      searches = JSON.parse(localStorage.getItem('searches'));\r\n      searchSuccess = JSON.parse(localStorage.getItem('searchSuccess'));\r\n    }\r\n    searches.push(searchTitle);\r\n    var JSONReadySearches = JSON.stringify(searches);\r\n    localStorage.setItem('searches', JSONReadySearches);\r\n    console.log(localStorage.getItem('searches'));\r\n    const response = await axios.get(API + searchTitle);\r\n    let result = parseList(response);\r\n    console.log(result);\r\n    if (result.Response == 'False') {\r\n      searchSuccess.push('not found')\r\n    }\r\n    else {\r\n      searchSuccess.push('found');\r\n    }\r\n    var JSONReadySearcheSuccess = JSON.stringify(searchSuccess);\r\n    localStorage.setItem('searchSuccess', JSONReadySearcheSuccess);\r\n    console.log(localStorage.getItem('searchSuccess'));\r\n    return result;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return {};\r\n  }\r\n};\r\n\r\nconst parseList = response => {\r\n  if (response.status !== 200) throw Error(response.message);\r\n  if (!response.data) return [];\r\n  let list = response.data;\r\n  if (typeof list !== 'object') {\r\n    list = [];\r\n  }\r\n  return list;\r\n};\r\n\r\nexport const parseItem = (response, code) => {\r\n  if (response.status !== code) throw Error(response.message);\r\n  let item = response.data;\r\n  if (typeof item !== 'object') {\r\n    item = undefined;\r\n  }\r\n  return item;\r\n};\r\n\r\nexport const dataService = {\r\n  getMovie,\r\n};\r\n"]}]}