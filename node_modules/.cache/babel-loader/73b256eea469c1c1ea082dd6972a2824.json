{"remainingRequest":"C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\src\\components\\movie.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\src\\components\\movie.vue","mtime":1602008042712},{"path":"C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1602007925650},{"path":"C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\node_modules\\babel-loader\\lib\\index.js","mtime":1602007922436},{"path":"C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1602007925650},{"path":"C:\\Users\\christian.jones\\Documents\\GitHub\\Spectacle\\node_modules\\vue-loader\\lib\\index.js","mtime":1602008035899}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:\\\\Users\\\\christian.jones\\\\Documents\\\\GitHub\\\\Spectacle\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nexport default {\n  name: 'movie',\n  computed: _objectSpread({}, mapState(['ui'])),\n  data: function data() {\n    return {\n      movie: {\n        title: '',\n        poster: '',\n        date: '',\n        content: '',\n        quality: [],\n        length: '',\n        genre: '',\n        plot: '',\n        director: '',\n        actors: ''\n      }\n    };\n  },\n  props: {\n    moviedata: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  watch: {\n    moviedata: {\n      immediate: false,\n      handler: function handler(newVal) {\n        this.movieSetup(newVal);\n      }\n    }\n  },\n  methods: {\n    movieSetup: function movieSetup(movieInfo) {\n      this.movie.title = movieInfo.Title;\n      this.movie.poster = movieInfo.Poster;\n      this.movie.date = movieInfo.Released;\n      this.movie.content = movieInfo.Rated;\n      this.movie.quality = movieInfo.Ratings;\n      this.movie.length = movieInfo.Runtime;\n      this.movie.genre = movieInfo.Genre;\n      this.movie.plot = movieInfo.Plot;\n      this.movie.director = movieInfo.Director;\n      this.movie.actors = movieInfo.Actors;\n      this.$store.dispatch('setState', 2);\n    }\n  }\n};",{"version":3,"sources":["movie.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,SAAA,QAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAGA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,IAAA,CAAA,CADA,CAHA;AAOA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,KAAA,EAAA;AACA,QAAA,KAAA,EAAA,EADA;AAEA,QAAA,MAAA,EAAA,EAFA;AAGA,QAAA,IAAA,EAAA,EAHA;AAIA,QAAA,OAAA,EAAA,EAJA;AAKA,QAAA,OAAA,EAAA,EALA;AAMA,QAAA,MAAA,EAAA,EANA;AAOA,QAAA,KAAA,EAAA,EAPA;AAQA,QAAA,IAAA,EAAA,EARA;AASA,QAAA,QAAA,EAAA,EATA;AAUA,QAAA,MAAA,EAAA;AAVA;AADA,KAAA;AAcA,GAtBA;AAwBA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA,oBAAA,CAAA;AAFA;AADA,GAxBA;AA+BA,EAAA,KAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,SAAA,EAAA,KADA;AAEA,MAAA,OAFA,mBAEA,MAFA,EAEA;AACA,aAAA,UAAA,CAAA,MAAA;AACA;AAJA;AADA,GA/BA;AAwCA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,EAAA,oBAAA,SAAA,EAAA;AACA,WAAA,KAAA,CAAA,KAAA,GAAA,SAAA,CAAA,KAAA;AACA,WAAA,KAAA,CAAA,MAAA,GAAA,SAAA,CAAA,MAAA;AACA,WAAA,KAAA,CAAA,IAAA,GAAA,SAAA,CAAA,QAAA;AACA,WAAA,KAAA,CAAA,OAAA,GAAA,SAAA,CAAA,KAAA;AACA,WAAA,KAAA,CAAA,OAAA,GAAA,SAAA,CAAA,OAAA;AACA,WAAA,KAAA,CAAA,MAAA,GAAA,SAAA,CAAA,OAAA;AACA,WAAA,KAAA,CAAA,KAAA,GAAA,SAAA,CAAA,KAAA;AACA,WAAA,KAAA,CAAA,IAAA,GAAA,SAAA,CAAA,IAAA;AACA,WAAA,KAAA,CAAA,QAAA,GAAA,SAAA,CAAA,QAAA;AACA,WAAA,KAAA,CAAA,MAAA,GAAA,SAAA,CAAA,MAAA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,UAAA,EAAA,CAAA;AACA;AAbA;AAxCA,CAAA","sourcesContent":["<template>\r\n  <div>\r\n    <div @update:movie=\"movieSetup\" v-if=\"this.ui === 2\">\r\n      <span id=\"movie\">\r\n        <h1 v-text=\"movie.title\" id=\"title\"></h1>\r\n        <img :src=\"movie.poster\" id=\"poster\" />\r\n        <p id=\"date\">Release Date: {{ movie.date }}</p>\r\n        <p id=\"rating\">Rated: {{ movie.content }}</p>\r\n        <span id=\"scorecontain\">\r\n          <p v-for=\"rating in movie.quality\" :key=\"rating.Source\" id=\"score\">\r\n            {{ rating.Source }} : {{ rating.Value }}\r\n          </p>\r\n        </span>\r\n        <p id=\"runtime\">Run Time: {{ movie.length }}</p>\r\n        <p id=\"genre\">Genre: {{ movie.genre }}</p>\r\n        <p id=\"plot\">Plot: {{ movie.plot }}</p>\r\n        <p id=\"director\">Director: {{ movie.director }}</p>\r\n        <p id=\"actors\">Actors/Actresses: {{ movie.actors }}</p>\r\n      </span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\n\r\nexport default {\r\n  name: 'movie',\r\n\r\n  computed: {\r\n    ...mapState(['ui']),\r\n  },\r\n\r\n  data: function() {\r\n    return {\r\n      movie: {\r\n        title: '',\r\n        poster: '',\r\n        date: '',\r\n        content: '',\r\n        quality: [],\r\n        length: '',\r\n        genre: '',\r\n        plot: '',\r\n        director: '',\r\n        actors: '',\r\n      },\r\n    };\r\n  },\r\n\r\n  props: {\r\n    moviedata: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    moviedata: {\r\n      immediate: false,\r\n      handler(newVal) {\r\n        this.movieSetup(newVal);\r\n      },\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    movieSetup: function(movieInfo) {\r\n      this.movie.title = movieInfo.Title;\r\n      this.movie.poster = movieInfo.Poster;\r\n      this.movie.date = movieInfo.Released;\r\n      this.movie.content = movieInfo.Rated;\r\n      this.movie.quality = movieInfo.Ratings;\r\n      this.movie.length = movieInfo.Runtime;\r\n      this.movie.genre = movieInfo.Genre;\r\n      this.movie.plot = movieInfo.Plot;\r\n      this.movie.director = movieInfo.Director;\r\n      this.movie.actors = movieInfo.Actors;\r\n      this.$store.dispatch('setState', 2);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#movie {\r\n  position: absolute;\r\n  top: 25%;\r\n  -webkit-box-align: center;\r\n  -webkit-box-pack: center;\r\n  display: -webkit-box;\r\n  left: 100px;\r\n  height: 100%;\r\n}\r\n#title {\r\n  position: absolute;\r\n  left: 320px;\r\n  top: -45px;\r\n  width: 800px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-weight: bold;\r\n  font-size: 40pt;\r\n  color: #7f2394;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n}\r\n#poster {\r\n  position: absolute;\r\n  top: 0%;\r\n}\r\n#date {\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 320px;\r\n  width: 400px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-style: italic;\r\n  font-size: 20pt;\r\n  color: #9c29b6;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n}\r\n#rating {\r\n  position: absolute;\r\n  top: 70px;\r\n  left: 320px;\r\n  width: 250px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-style: normal;\r\n  font-size: 20pt;\r\n  color: #9c29b6;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n}\r\n#runtime {\r\n  position: absolute;\r\n  top: 30px;\r\n  left: 750px;\r\n  width: 400px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-style: italic;\r\n  font-size: 20pt;\r\n  color: #9c29b6;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n}\r\n#genre {\r\n  position: absolute;\r\n  top: 70px;\r\n  left: 600px;\r\n  width: 700px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-style: normal;\r\n  font-size: 20pt;\r\n  color: #9c29b6;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n}\r\n#plot {\r\n  position: absolute;\r\n  top: 110px;\r\n  left: 320px;\r\n  width: 1000px;\r\n  height: 100px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-style: normal;\r\n  font-size: 20pt;\r\n  color: #9c29b6;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n}\r\n#director {\r\n  position: absolute;\r\n  top: 215px;\r\n  left: 320px;\r\n  width: 800px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-style: normal;\r\n  font-size: 20pt;\r\n  color: #9c29b6;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n}\r\n#actors {\r\n  position: absolute;\r\n  top: 255px;\r\n  left: 320px;\r\n  width: 800px;\r\n  height: 80px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-style: normal;\r\n  font-size: 20pt;\r\n  color: #9c29b6;\r\n  text-overflow: ellipsis;\r\n  overflow: hidden;\r\n}\r\n#score {\r\n  position: relative;\r\n  width: 400px;\r\n  top: -60px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-style: normal;\r\n  font-size: 20pt;\r\n  color: #9c29b6;\r\n}\r\n#scorecontain {\r\n  position: absolute;\r\n  width: 450px;\r\n  left: 320px;\r\n  top: 400px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  font-style: normal;\r\n  font-size: 20pt;\r\n  color: #9c29b6;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}